<?php
namespace app\api\controller;
use \think\Db;
use \app\mobile\controller\MobileHome;
use \app\api\query\DeviceReport;
use \app\mobile\controller\Wxauto;
use \app\mobile\controller\MobileMall;
use \app\common;
use think\Log;
use think\Controller;
use think\Session;
use app\api\model\member as MemberModel;
use app\api\model\member_relationship as MemRelationModel;
use app\api\model\company as CompanyModel;
class Zcurl extends MobileMall
{
  public function _initialize()
  {
    parent::_initialize(); // TODO: Change the autogenerated stub
     $this->wxconfig = model('wechat')->getOneWxconfig();
     $this->appId = $this->wxconfig['appid'];
     $this->appSecret = $this->wxconfig['appsecret'];
  }
  //在工厂审核通过之后，将工厂的信息写入到ds_user中
  public function register_user($username ="18603027764")
  {
    $curl = curl_init();
    $userstring=strval($username);
    $register_info='{"username":"'.$userstring.'","nickname":"factory","password":"factory_123456" }';
    $url=urlencode($register_info);
    $url="http://47.95.123.193:8808/register.do?p=".$url;
    //设置抓取的url
    curl_setopt($curl, CURLOPT_URL, $url);
    //设置头文件的信息作为数据流输出
    curl_setopt($curl, CURLOPT_HEADER, 1);
    //设置获取的信息以文件流的形式返回，而不是直接输出。
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
    //执行命令
    $data = curl_exec($curl);
    $register_ok='"code": 0';
    $register_fail='"code": 100';
    $register_done='"code": 101';
    if(strstr($data,$register_ok))//注册成功
    {
        echo('用户注册成功');
    }
    else if(strstr($data,$register_done)) //此用户已经注册
    {
        echo("用户已注册");
    }
    else //此用户注册失败
    {
        $data = curl_exec($curl);
        echo("用户注册失败");
    }
    //关闭URL请求
    curl_close($curl);
  }

  //微信用户加入到特定的company中
  public function wx_user_bind_factor_and_company($store_id,$company_id,$member_id)
  {
    if(strcmp($company_id,"fork_company_id"))
    {
      Log::log("wx_user_bind_factor_and_company,store_id=".$store_id);
      Log::log("wx_user_bind_factor_and_company,company_id=".$company_id);
      Log::log("wx_user_bind_factor_and_company,member_id=".$member_id);
        
      $search_res = $this -> searchRelation($company_id,$member_id);
      //没有符合的数据就进行绑定操作
      if($search_res == 0)
      {
            $data = [
                'member_id' => $member_id,
                'company_id' => $company_id,
            ];
            Db('member_relationship') -> insert($data);
      }
      else
      {
          //相应处理
      }
        
    }
  }
  public function searchRelation($company_id,$member_id)
  {
        $status = 0;
        $search = Db('member_relationship')->field('company_id') ->where('member_id',$member_id) -> select();
        foreach ($search as $key => $value) {
            if($value['company_id'] == $company_id)
            {
                $status = 1;
            }
        }
        return $status;
  }

  // api/Zcurl/is_member_has_company
  public function is_member_has_company()
  {
    $session_get = (Session::get('member_id'));
    //判断Session
    if(isset($session_get))
    {
        //公司数据数组
        $company_arr = array();
        $session_get = (Session::get('member_id'));
        $mem_model = new MemberModel();
        $com_model = new CompanyModel();
        $res = $mem_model->getRelationship($session_get);
        foreach ($res as $key => $value) {
            return 1;
        }
    }
    else
    {
        return 0;
    }
  }
  // api/Zcurl/common_wx_user_login
  public function common_wx_user_login($store_id,$company_id)
  {
      Log::log("common_wx_user_login,store_id=".$store_id);
      Log::log("common_wx_user_login,company_id=".$company_id);
/*
 $ref = "https://shop.zuoduoduo.cn/wap/member/member.html";
 $ref = "https://shop.zuoduoduo.cn/api/template/index.html /api/template/index.html"
 $ref = "https://www.baidu.com";
 $ref = "https://shop.zuoduoduo.cn/api/template/mine.html?t=999";
*/
      $ref = "https://shop.zuoduoduo.cn/api/template/factory_info.html";
      $ref = "https://shop.zuoduoduo.cn/api/template/index.html";
      $redirect_uri = "https://shop.zuoduoduo.cn/api/Zcurl/checkAuth/store_id/".$store_id."/company_id/".$company_id."?ref=" . urlencode($ref);
      $code_url = "https://open.weixin.qq.com/connect/oauth2/authorize?appid=$this->appId&redirect_uri=" . urlencode($redirect_uri) . "&response_type=code&scope=snsapi_userinfo&state=dsmall#wechat_redirect"; // 获取code
      if (cookie('key') && cookie('new_cookie'))
      {
          //已经登陆
          $mbusertoken_model = model('mbusertoken');
          $member_model = model('member');
          $mb_user_token_info = $mbusertoken_model->getMbusertokenInfoByToken(cookie('key'));
          $member_info = $member_model->getMemberInfoByID($mb_user_token_info['member_id']);
          Session::set('member_id',$mb_user_token_info['member_id']);
        //  Session::set('test','++++++++++test+++++++++++++');

          if (empty($member_info))
          {
              cookie('debug_group', null);
              cookie('username', null);
              cookie('key', null);
              cookie('unionid', null);
              cookie('new_cookie', null);
              Log::log('系统错误');
              $this->redirect($code_url);
          }
          else
          {
              Log::log('已经登录');
              $sess = Session::get('member_id');
              Log::log($sess);
              //$test = Session::get('test');
              //Log::log($test);

              $result = $this->is_member_has_company();
              if($result==1)
              {
                $ref = "https://shop.zuoduoduo.cn/api/template/factory_info.html";
              }
              else{
                $ref = "https://shop.zuoduoduo.cn/api/template/index.html";
              }
              $this->wx_user_bind_factor_and_company($store_id,$company_id,$sess);
              $this->redirect($ref);
          }
      }
      else
      {
          Log::log('没有发现cookie，即将登录');
          $this->redirect($code_url);//这个让其调用自动登录接口
          //$this->autoLogin(Zcurl::$store_id,$code_url);
      }
  }

  //获取openid的统一方法
  public function getOpenid(){
      $code = input('get.code');
      $from = input('get.from');
      if (!empty($code)) {
          if ($from == 'miniprogram') {
              //小程序支付获取openid
              $xcx_appid = $this->wxconfig['xcx_appid'];
              $xcx_appsecret = $this->wxconfig['xcx_appsecret'];
              //说明：https://developers.weixin.qq.com/minigame/dev/document/open-api/login/code2accessToken.html?search-key=jscode2session
              $url = "https://api.weixin.qq.com/sns/jscode2session?appid=" . $xcx_appid . "&secret=" . $xcx_appsecret . "&js_code=" . $code . "&grant_type=authorization_code";
              if (!$xcx_appid || !$xcx_appsecret) {
                  $return = array('done' => false, 'msg' => '未配置小程序');
                  return $return;
              }
          } else {
              //微信自动登录
              $wxappid = $this->appId;
              $wxappsecret = $this->appSecret;
              $url = "https://api.weixin.qq.com/sns/oauth2/access_token?appid=$wxappid&secret=$wxappsecret&code=$code&grant_type=authorization_code";
              if (!$wxappid || !$wxappsecret) {
                  $return = array('done' => false, 'msg' => '未配置微信');
                  return $return;
              }
          }

          //获取 用户唯一标识，请注意，在未关注公众号时，用户访问公众号的网页，也会产生一个用户和公众号唯一的OpenID
          $res = json_decode(http_request($url), true);
          if (isset($res['errcode'])) {
              $return = array('done' => false, 'msg' => '错误码' . $res['errcode'] . '，' . $res['errmsg']);
              return $return;
          }
          $return = array('done' => true, 'data' => $res);
          return $return;
      } else {
          $return = array('done' => false, 'msg' => '未获得微信用户授权');
          return $return;
      }
  }
public function autoLogin($store_id,$company_id) {
    //  $this->redirect($code_url);//这个让其调用自动登录接口
      //获取openid格外用一个方法，因为有些地方（如小程序支付）不需要获取用户信息，只需要openid
    //  $id = $store_id;
      $return=$this->getOpenid();
      if(!$return['done']){
          return $return;
      }
      $res=$return['data'];
      $url = "https://api.weixin.qq.com/sns/userinfo?access_token=" . $res['access_token'] . "&openid=" . $res['openid'] . "&lang=zh_CN";
      $userinfo = json_decode(http_request($url), true);
      if (isset($userinfo['errcode'])) {
          $return = array('done' => false, 'msg' => $userinfo['errcode'] . '，' . $userinfo['errmsg']);
          return $return;
      }
      if (empty($userinfo['unionid'])) {
          $return = array('done' => false, 'msg' => '获取unionid失败');
      }

      session('openid', $userinfo['openid']);
      $member_model = model('member');
      $member_info = $member_model->getMemberInfo(array('member_wxunionid' => $userinfo['unionid']));
      //Session::set('member_id',$mb_user_token_info['member_id']);
      if (!empty($member_info)) {
          //更新信息
          $token = $member_model->getBuyerToken($member_info['member_id'], $member_info['member_name'], 'wap');
          cookie('debug_group', $member_info["debug_group"], 3600 * 24, '/');
          cookie('username', $member_info["member_name"], 3600 * 24, '/');
          cookie('key', $token, 3600 * 24, '/');
          //cookie('unionid',$token,3600*24,'/');
          cookie('new_cookie', '100', 3600 * 24, '/');
          Session::set('member_id',$member_info['member_id']);
          $sess = Session::get('member_id');
          Log::log("autoLogin=".$sess);
          $this->wx_user_bind_factor_and_company($store_id,$company_id,$sess);
          $return = array('done' => true, 'data' => array('has_user' => true, 'openid' => $userinfo['openid'], 'unionid' => $userinfo['unionid'], 'username' => $member_info["member_name"], 'key' => $token));
          return $return;
      } else {
          $logic_connect_api = model('connectapi', 'logic');
          //注册会员信息 返回会员信息
          $reg_info = array(
              'member_wxopenid' => $userinfo['openid'],
              'member_wxunionid' => $userinfo['unionid'],
              'nickname' => isset($userinfo['nickname']) ? $userinfo['nickname'] : '',
//            'headimgurl' => isset($userinfo['headimgurl']) ? $userinfo['headimgurl'] : '',#提高体验暂时不对图片进行处理
          );
          $wx_member = $logic_connect_api->wx_register($reg_info, 'wx');
          if (!empty($wx_member)) {
              $token = $member_model->getBuyerToken($wx_member['member_id'], $wx_member['member_name'], 'wap');
              cookie('username', $wx_member['member_name'], 3600 * 24, '/');
              cookie('key', $token, 3600 * 24, '/');
              Session::set('member_id',$wx_member['member_id']);
              $sess = Session::get('member_id');
              Log::log("wx_register=".$sess);
              $this->wx_user_bind_factor_and_company($store_id,$company_id,$sess);
              $return = array('done' => true, 'data' => array('has_user' => true, 'openid' => $userinfo['openid'], 'unionid' => $userinfo['unionid'], 'username' => $wx_member["member_name"], 'key' => $token));
              return $return;
          } else {
              $return = array('done' => false, 'msg' => '用户注册失败');
              return $return;
          }
      }
  }
//https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx98f3be487b6467d7&redirect_uri=https://shop.zuoduoduo.cn/index.php/mobile/Wxauto/checkAuth?&store_id=2&response_type=code&scope=snsapi_userinfo&state=dsmall#wechat_redirect
  public function checkAuth($store_id,$company_id) {
    Log::log("checkAuth,store_id=".$store_id);
    Log::log("checkAuth,company_id=".$company_id);
      $ref = input('get.ref');
      $return = $this->autoLogin($store_id,$company_id);
      if ($return['done']) {
          if (!$ref) {
              $ref = WAP_SITE_URL;
          }
          $result = $this->is_member_has_company();
          if($result==1)
          {
            $ref = "https://shop.zuoduoduo.cn/api/template/factory_info.html";
          }
          else{
            $ref = "https://shop.zuoduoduo.cn/api/template/index.html";
          }
        //  $this->redirect(urldecode($ref));
            $this->redirect(($ref));
      } else {
          halt($return['msg']);
      }
  }
}
